[{"path":"https://amywatt.github.io/UWBiostat561/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 UWBiostat561 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/articles/demopkg.html","id":"generate-a-random-adjacency-matrix","dir":"Articles","previous_headings":"","what":"Generate a random adjacency matrix","title":"Demo","text":"","code":"set.seed(10) n <- 10 clique_fraction <- 0.5 clique_edge_density <- 0.8 result <- generate_partial_clique(n, clique_fraction, clique_edge_density) result #> $adj_mat #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    1    0    0    0    0    0    0    0    0     0 #>  [2,]    0    1    0    0    0    0    0    0    0     0 #>  [3,]    0    0    1    0    0    0    1    1    1     0 #>  [4,]    0    0    0    1    0    0    0    0    0     0 #>  [5,]    0    0    0    0    1    0    0    0    0     0 #>  [6,]    0    0    0    0    0    1    1    1    0     0 #>  [7,]    0    0    1    0    0    1    1    1    1     0 #>  [8,]    0    0    1    0    0    1    1    1    1     0 #>  [9,]    0    0    1    0    0    0    1    1    1     0 #> [10,]    0    0    0    0    0    0    0    0    0     1"},{"path":"https://amywatt.github.io/UWBiostat561/articles/demopkg.html","id":"run-an-implementation-of-calculate-maximum-partial-clique","dir":"Articles","previous_headings":"","what":"Run an implementation of calculate maximum partial clique","title":"Demo","text":"","code":"alpha <- 0.8 compute_maximal_partial_clique(result$adj_mat, alpha) #> $clique_idx #> [1] 3 7 8 9 #>  #> $edge_density #> [1] 1"},{"path":"https://amywatt.github.io/UWBiostat561/articles/demopkg.html","id":"run-simulation","dir":"Articles","previous_headings":"","what":"Run Simulation","title":"Demo","text":"","code":"n_vec <- c(5, 10, 15) clique_fraction_vec <- c(0.6, 0.9) clique_edge_density_vec <- c(0.6, 0.9) alpha_vec <- c(0.5, 0.9) trials <- 1 imp_numbers <- c(1, 5, 23)  result <- hw4_simulation(n_vec, clique_fraction_vec, clique_edge_density_vec, alpha_vec, trials, imp_numbers)"},{"path":"https://amywatt.github.io/UWBiostat561/articles/demopkg.html","id":"plot-results","dir":"Articles","previous_headings":"","what":"Plot results","title":"Demo","text":"","code":"df <- data.frame(   implementation = rownames(result$result),   value = result$result$num_largest_partial_clique)  ggplot(data = df, aes(x = implementation, y=value)) +   geom_bar(stat=\"identity\") +    geom_hline(yintercept=result$num_tests, col=\"red\")"},{"path":"https://amywatt.github.io/UWBiostat561/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amy Watt. Author, maintainer.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Watt (2024). UWBiostat561: Functions UW Biostatistics 561 Course. R package version 0.0.0.9000, https://amywatt.github.io/UWBiostat561/.","code":"@Manual{,   title = {UWBiostat561: Functions for UW Biostatistics 561 Course},   author = {Amy Watt},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://amywatt.github.io/UWBiostat561/}, }"},{"path":"https://amywatt.github.io/UWBiostat561/index.html","id":"purpose","dir":"","previous_headings":"","what":"Functions for UW Biostatistics 561 Course","title":"Functions for UW Biostatistics 561 Course","text":"demo package UW BIOST 561 (Spring 2024), taught Kevin Lin. URL GitHub (.e., source code) : https://github.com/amywatt/UWBiostat561 URL Pkgdown webpage : https://amywatt.github.io/UWBiostat561","code":""},{"path":"https://amywatt.github.io/UWBiostat561/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install","title":"Functions for UW Biostatistics 561 Course","text":"package called UWBiostat561. install, run following code (R): Upon completion, can run following code (R):","code":"library(devtools) devtools::install_github(\"amywatt/UWBiostat561\") library(UWBiostat561)"},{"path":"https://amywatt.github.io/UWBiostat561/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Functions for UW Biostatistics 561 Course","text":"package depends following packages: ggplot2.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/index.html","id":"session-info","dir":"","previous_headings":"","what":"Session info","title":"Functions for UW Biostatistics 561 Course","text":"package developed following environment","code":"─ Session info ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  setting  value  version  R version 4.3.2 (2023-10-31)  os       macOS Ventura 13.4  system   aarch64, darwin20  ui       RStudio  language (EN)  collate  en_US.UTF-8  ctype    en_US.UTF-8  tz       America/Los_Angeles  date     2024-06-04  rstudio  2023.12.0+369 Ocean Storm (desktop)  pandoc   3.2 @ /usr/local/bin/ (via rmarkdown)  ─ Packages ────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────  package      * version    date (UTC) lib source  brio           1.1.5      2024-04-24 [1] CRAN (R 4.3.1)  cachem         1.0.8      2023-05-01 [1] CRAN (R 4.3.0)  callr          3.7.6      2024-03-25 [1] CRAN (R 4.3.1)  cli            3.6.2      2023-12-11 [1] CRAN (R 4.3.1)  colorspace     2.1-0      2023-01-23 [1] CRAN (R 4.3.0)  crayon         1.5.2      2022-09-29 [1] CRAN (R 4.3.0)  desc           1.4.3      2023-12-10 [1] CRAN (R 4.3.1)  devtools       2.4.5      2022-10-11 [1] CRAN (R 4.3.0)  digest         0.6.35     2024-03-11 [1] CRAN (R 4.3.1)  dplyr          1.1.4      2023-11-17 [1] CRAN (R 4.3.1)  ellipsis       0.3.2      2021-04-29 [1] CRAN (R 4.3.0)  evaluate       0.23       2023-11-01 [1] CRAN (R 4.3.1)  fansi          1.0.6      2023-12-08 [1] CRAN (R 4.3.1)  farver         2.1.1      2022-07-06 [1] CRAN (R 4.3.0)  fastmap        1.1.1      2023-02-24 [1] CRAN (R 4.3.0)  fs             1.6.4      2024-04-25 [1] CRAN (R 4.3.1)  generics       0.1.3      2022-07-05 [1] CRAN (R 4.3.0)  ggplot2      * 3.5.1      2024-04-23 [1] CRAN (R 4.3.1)  glue           1.7.0      2024-01-09 [1] CRAN (R 4.3.1)  gtable         0.3.5      2024-04-22 [1] CRAN (R 4.3.1)  htmltools      0.5.8.1    2024-04-04 [1] CRAN (R 4.3.1)  htmlwidgets    1.6.4      2023-12-06 [1] CRAN (R 4.3.1)  httpuv         1.6.15     2024-03-26 [1] CRAN (R 4.3.1)  igraph         2.0.3      2024-03-13 [1] CRAN (R 4.3.1)  knitr          1.45       2023-10-30 [1] CRAN (R 4.3.1)  labeling       0.4.3      2023-08-29 [1] CRAN (R 4.3.0)  later          1.3.2      2023-12-06 [1] CRAN (R 4.3.1)  lifecycle      1.0.4      2023-11-07 [1] CRAN (R 4.3.1)  magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.3.0)  memoise        2.0.1      2021-11-26 [1] CRAN (R 4.3.0)  mime           0.12       2021-09-28 [1] CRAN (R 4.3.0)  miniUI         0.1.1.1    2018-05-18 [1] CRAN (R 4.3.0)  munsell        0.5.1      2024-04-01 [1] CRAN (R 4.3.1)  pillar         1.9.0      2023-03-22 [1] CRAN (R 4.3.0)  pkgbuild       1.4.4      2024-03-17 [1] CRAN (R 4.3.1)  pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.3.0)  pkgdown        2.0.9      2024-04-18 [1] CRAN (R 4.3.1)  pkgload        1.3.4      2024-01-16 [1] CRAN (R 4.3.1)  processx       3.8.4      2024-03-16 [1] CRAN (R 4.3.1)  profvis        0.3.8      2023-05-02 [1] CRAN (R 4.3.0)  promises       1.3.0      2024-04-05 [1] CRAN (R 4.3.1)  ps             1.7.6      2024-01-18 [1] CRAN (R 4.3.1)  purrr          1.0.2      2023-08-10 [1] CRAN (R 4.3.0)  R6             2.5.1      2021-08-19 [1] CRAN (R 4.3.0)  Rcpp           1.0.12     2024-01-09 [1] CRAN (R 4.3.1)  remotes        2.5.0      2024-03-17 [1] CRAN (R 4.3.1)  rlang          1.1.3      2024-01-10 [1] CRAN (R 4.3.1)  rmarkdown      2.26       2024-03-05 [1] CRAN (R 4.3.1)  rprojroot      2.0.4      2023-11-05 [1] CRAN (R 4.3.1)  rstudioapi     0.16.0     2024-03-24 [1] CRAN (R 4.3.1)  scales         1.3.0      2023-11-28 [1] CRAN (R 4.3.1)  sessioninfo    1.2.2      2021-12-06 [1] CRAN (R 4.3.0)  shiny          1.8.1.1    2024-04-02 [1] CRAN (R 4.3.1)  stringi        1.8.3      2023-12-11 [1] CRAN (R 4.3.1)  stringr        1.5.1      2023-11-14 [1] CRAN (R 4.3.1)  testthat       3.2.1.1    2024-04-14 [1] CRAN (R 4.3.1)  tibble         3.2.1      2023-03-20 [1] CRAN (R 4.3.0)  tidyselect     1.2.1      2024-03-11 [1] CRAN (R 4.3.1)  urlchecker     1.0.1      2021-11-30 [1] CRAN (R 4.3.0)  usethis        2.2.3      2024-02-19 [1] CRAN (R 4.3.1)  utf8           1.2.4      2023-10-22 [1] CRAN (R 4.3.1)  UWBiostat561 * 0.0.0.9000 2024-06-04 [1] local  vctrs          0.6.5      2023-12-01 [1] CRAN (R 4.3.1)  withr          3.0.0      2024-01-16 [1] CRAN (R 4.3.1)  xfun           0.43       2024-03-25 [1] CRAN (R 4.3.1)  xtable         1.8-4      2019-04-21 [1] CRAN (R 4.3.0)  yaml           2.3.8      2023-12-11 [1] CRAN (R 4.3.1)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_correct_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the correct density, given a set of nodes — compute_correct_density","title":"Compute the correct density, given a set of nodes — compute_correct_density","text":"define clique_idx length 1 density 1.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_correct_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the correct density, given a set of nodes — compute_correct_density","text":"","code":"compute_correct_density(adj_mat, clique_idx)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_correct_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the correct density, given a set of nodes — compute_correct_density","text":"adj_mat symmetric matrix values 0 1, 1's along diagonal, row- column-names, 5 50  rows/columns (inclusive). clique_idx numeric vector index numbers corresponding nodes (.e., values 1 nrow(adj_mat)) function deems maximum partial clique. vector duplicate elements, must positive integers, largest value exceed nrow(adj_mat)","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_correct_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the correct density, given a set of nodes — compute_correct_density","text":"numeric, density edges among adj_mat[clique_idx,clique_idx]","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the largest partial clique — compute_maximal_partial_clique","title":"Compute the largest partial clique — compute_maximal_partial_clique","text":"function computes largest partial clique given adjacency matrix required edge density alpha.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the largest partial clique — compute_maximal_partial_clique","text":"","code":"compute_maximal_partial_clique(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the largest partial clique — compute_maximal_partial_clique","text":"adj_mat adjacency matrix representing graph. alpha required edge density partial clique, must 0 1.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the largest partial clique — compute_maximal_partial_clique","text":"list containing: node_ids vector containing indices vertices computed maximal partial clique. edge_density edge density computed maximal partial clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the largest partial clique — compute_maximal_partial_clique","text":"","code":"# Example usage: # Define an adjacency matrix adj_mat <- matrix(c(1, 1, 1, 1, 1,                     1, 1, 1, 1, 1,                     1, 1, 1, 1, 1,                     1, 1, 1, 1, 1,                     1, 1, 1, 1, 1), nrow = 5, byrow = TRUE)  # Set the required edge density alpha <- 0.7  # Compute the maximal partial clique compute_maximal_partial_clique(adj_mat, alpha) #> $clique_idx #> [1] 1 2 3 4 5 #>  #> $edge_density #> [1] 1 #>"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute maximal partial clique — compute_maximal_partial_clique1","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"Determines indices corresponding maximal partial clique adjacency matrix given partial clique density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"","code":"compute_maximal_partial_clique1(adj_mat, alpha, method = c(\"simple\", \"pivot\"))"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"adj_mat symmetric adjacency matrix 5-50 rows columns. alpha numeric value 0.5 1 (inclusive) indicating minimum fraction edges among nodes outputted partial clique. method One \"simple\" \"pivot\". \"simple\" searches maximal partial clique using modified version original Bron-Kerbosch algorithm, \"pivot\" uses modified version Bron-Kerbosch algorith pivot (Bron & Kerbosch 1973).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"Outputs list containing clique_idx: vector indices form partial clique edge_density: Percentage edges adj_mat among nodes clique_idx.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"function uses modified versions Bron-Kerbosch algorithm, designed compute maximal full cliques, compute maximal partial cliques, allowing users specify \"simple\" \"pivot\" (Bron & Kerbosch 1973). Specifically, alpha < 1, algorithm modified candidate excluded nodes iteration restricted neighbors. Rather, candidate clique initially reported maximal clique satisfies density alpha/2 (help find cliques two nodes alone satisfy alpha density, together clique ), searches final results choose largest clique satisfies alpha. alpha = 1 set, Bron-Kerbosch algorithm applied directly. Using","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute maximal partial clique — compute_maximal_partial_clique1","text":"Bron, C., & Kerbosch, J. (1973). Algorithm 457: finding cliques undirected graph. Communications ACM, 16(9), 575-577.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique10.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the maximal partial clique function — compute_maximal_partial_clique10","title":"Compute the maximal partial clique function — compute_maximal_partial_clique10","text":"function computes largest partial clique given adjacency matrix adj_mat required edge density alpha.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the maximal partial clique function — compute_maximal_partial_clique10","text":"","code":"compute_maximal_partial_clique10(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique10.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the maximal partial clique function — compute_maximal_partial_clique10","text":"adj_mat adjacency matrix representing connections nodes graph. matrix symmetric, ones along diagonal representing self-loops zeros ones elsewhere representing absence presence edges nodes, respectively. alpha required edge density among nodes maximal partial clique. value numeric scalar 0.5 1, inclusive.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique10.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the maximal partial clique function — compute_maximal_partial_clique10","text":"list containing index numbers nodes forming maximal partial clique (clique_idx) corresponding edge density (edge_density) among nodes.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique10.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the maximal partial clique function — compute_maximal_partial_clique10","text":"function iteratively searches largest partial clique graph removing nodes meet required edge density criterion. initializes partial clique nodes graph gradually removes nodes remaining subset nodes forms partial clique edge density greater equal specified alpha. resulting partial clique returned along calculated edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique11.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute partial clique — compute_maximal_partial_clique11","title":"Compute partial clique — compute_maximal_partial_clique11","text":"Randomly try bunch cliques return largest one passes threshold","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique11.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute partial clique — compute_maximal_partial_clique11","text":"","code":"compute_maximal_partial_clique11(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique11.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute partial clique — compute_maximal_partial_clique11","text":"adj_mat adjacency matrix 0,1 alpha minimum edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique11.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute partial clique — compute_maximal_partial_clique11","text":"list containing maximum partial clique density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique12.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — compute_maximal_partial_clique12","title":"Title — compute_maximal_partial_clique12","text":"Title","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique12.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — compute_maximal_partial_clique12","text":"","code":"compute_maximal_partial_clique12(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique12.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — compute_maximal_partial_clique12","text":"adj_mat matrix alpha value","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique12.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — compute_maximal_partial_clique12","text":"list","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique13.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — compute_maximal_partial_clique13","title":"Title — compute_maximal_partial_clique13","text":"Title","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique13.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — compute_maximal_partial_clique13","text":"","code":"compute_maximal_partial_clique13(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique13.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — compute_maximal_partial_clique13","text":"adj_mat adjacency matrix alpha edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique13.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — compute_maximal_partial_clique13","text":"list","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique14.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Maximal Partial Clique — compute_maximal_partial_clique14","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique14","text":"Compute Maximal Partial Clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique14.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique14","text":"","code":"compute_maximal_partial_clique14(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique14.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique14","text":"adj_mat adjacency matrix representing graph. alpha minimum required edge density partial clique, 0.5 1.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique14.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique14","text":"list containing clique_idx (numeric vector indices) edge_density (numeric proportion edges partial clique).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique15.html","id":null,"dir":"Reference","previous_headings":"","what":"Find hte matximal partial clique — compute_maximal_partial_clique15","title":"Find hte matximal partial clique — compute_maximal_partial_clique15","text":"Start first entry, iteratively add nodes. first moment find valid click, stop","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique15.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find hte matximal partial clique — compute_maximal_partial_clique15","text":"","code":"compute_maximal_partial_clique15(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique15.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find hte matximal partial clique — compute_maximal_partial_clique15","text":"adj_mat graph alpha minimum threshold stop","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique15.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find hte matximal partial clique — compute_maximal_partial_clique15","text":"list","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique16.html","id":null,"dir":"Reference","previous_headings":"","what":"Find maximal partial clique — compute_maximal_partial_clique16","title":"Find maximal partial clique — compute_maximal_partial_clique16","text":"Find maximal partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique16.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find maximal partial clique — compute_maximal_partial_clique16","text":"","code":"compute_maximal_partial_clique16(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique16.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find maximal partial clique — compute_maximal_partial_clique16","text":"adj_mat matrix alpha value","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique16.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find maximal partial clique — compute_maximal_partial_clique16","text":"list","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique17.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique17","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique17","text":"Enumerate row find edges Start first row first partial clique subsequent row, check connects existing partial cliques. , append existing partial cliques; , create new partial clique row. Return partial clique nodes","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique17.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique17","text":"","code":"compute_maximal_partial_clique17(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique17.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique17","text":"adj_mat symmetric adjacency matrix alpha edge density adjacency matrix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique17.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the maximal partial clique in an adjacency matrix — compute_maximal_partial_clique17","text":"list containing indices maximal partial clique, edge density maximal partial clique, partial cliques adjacency matrix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique18.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to compute the size of the maximal partial clique of an adjacency matrix — compute_maximal_partial_clique18","title":"A function to compute the size of the maximal partial clique of an adjacency matrix — compute_maximal_partial_clique18","text":"Computes maximum size partial clique adjacency matrix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to compute the size of the maximal partial clique of an adjacency matrix — compute_maximal_partial_clique18","text":"","code":"compute_maximal_partial_clique18(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to compute the size of the maximal partial clique of an adjacency matrix — compute_maximal_partial_clique18","text":"adj_mat symmetric diagonal adjacency matrix alpha threshold maximum number edges partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to compute the size of the maximal partial clique of an adjacency matrix — compute_maximal_partial_clique18","text":"index vector showing first maximal partial clique exceeds threshold, \"first\" decided order possible cliques determined utils::combn function. Also returns edge density particular partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique19.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Maximal Partial Clique in an Adjacency Matrix — compute_maximal_partial_clique19","title":"Compute the Maximal Partial Clique in an Adjacency Matrix — compute_maximal_partial_clique19","text":"function evaluates adjacency matrix identify largest set nodes forms partial clique, meeting specified edge density threshold. searches largest group nodes internal connectivity meets exceeds given proportion maximum possible edges (alpha). search exhaustive, checking possible combinations nodes ensure largest possible clique found satisfies density requirement. method computationally intensive thorough, intended provide best possible clique given constraints.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Maximal Partial Clique in an Adjacency Matrix — compute_maximal_partial_clique19","text":"","code":"compute_maximal_partial_clique19(adj_mat, alpha = 0.5)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique19.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Maximal Partial Clique in an Adjacency Matrix — compute_maximal_partial_clique19","text":"adj_mat symmetric adjacency matrix representing graph, matrix n x n, contains 0s 1s, 1s diagonal, lacks row column names. matrix size must 5 50 nodes inclusive. alpha numeric value 0.5 1 inclusive, specifying minimum required edge density within clique proportion fully connected clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique19.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Maximal Partial Clique in an Adjacency Matrix — compute_maximal_partial_clique19","text":"list containing two elements: clique_idx, numeric vector listing indices nodes form maximal partial clique, edge_density, actual edge density within clique. edge density computed number existing edges divided number possible edges among nodes clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique2.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the largest partial clique given an adjacency matrix and a required edge density — compute_maximal_partial_clique2","title":"Compute the largest partial clique given an adjacency matrix and a required edge density — compute_maximal_partial_clique2","text":"Compute largest partial clique given adjacency matrix required edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the largest partial clique given an adjacency matrix and a required edge density — compute_maximal_partial_clique2","text":"","code":"compute_maximal_partial_clique2(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the largest partial clique given an adjacency matrix and a required edge density — compute_maximal_partial_clique2","text":"adj_mat adjacency matrix values 0 1 alpha required edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the largest partial clique given an adjacency matrix and a required edge density — compute_maximal_partial_clique2","text":"list index numbers corresponding nodes maximal partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique20.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Maximal Partial Clique — compute_maximal_partial_clique20","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique20","text":"function calculates largest subset nodes within adjacency matrix forms partial clique meeting specified edge density threshold. function employs heuristic approach handle computationally challenging nature task.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique20.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique20","text":"","code":"compute_maximal_partial_clique20(adj_mat, alpha, verbose = 0)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique20.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique20","text":"adj_mat square symmetric adjacency matrix element either 0 1, diagonal elements 0. alpha numeric value 0.5 1 specifies minimum required edge density partial clique. verbose boolean","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique20.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique20","text":"list containing: clique_idxA numeric vector indices representing nodes maximal partial clique. edge_densityThe edge density found clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique21.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the maximal partial clique — compute_maximal_partial_clique21","title":"Find the maximal partial clique — compute_maximal_partial_clique21","text":"Computes largest partial clique given adjacency matrix adj_mat required edge density alpha. method computes edge density partial clique possible node combinations selects one largest edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique21.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the maximal partial clique — compute_maximal_partial_clique21","text":"","code":"compute_maximal_partial_clique21(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique21.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the maximal partial clique — compute_maximal_partial_clique21","text":"adj_mat adjacency matrix row- column-names, 5 50 rows/columns (inclusive). alpha value 0.5 1 (inclusive), edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique21.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the maximal partial clique — compute_maximal_partial_clique21","text":"list element clique_ind, vector index numbers largest partial clique, element edge_density, percentage edges adj_mat among nodes clique_idx","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique22.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Maximal Partial Clique — compute_maximal_partial_clique22","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique22","text":"function identifies largest subset nodes adjacency matrix forms partial clique meeting specified minimum edge density (alpha).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique22.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique22","text":"","code":"compute_maximal_partial_clique22(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique22.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique22","text":"adj_mat symmetric matrix representing adjacency matrix graph. alpha numeric value 0.5 1 indicating minimum edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique22.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Maximal Partial Clique — compute_maximal_partial_clique22","text":"list indices nodes edge density clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique23.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the largest partial clique — compute_maximal_partial_clique23","title":"Compute the largest partial clique — compute_maximal_partial_clique23","text":"function computes largest partial clique given adjacency matrix required edge density alpha.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique23.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the largest partial clique — compute_maximal_partial_clique23","text":"","code":"compute_maximal_partial_clique23(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique23.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the largest partial clique — compute_maximal_partial_clique23","text":"adj_mat adjacency matrix representing graph. alpha required edge density partial clique, must 0 1.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique23.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the largest partial clique — compute_maximal_partial_clique23","text":"list containing: node_ids vector containing indices vertices computed maximal partial clique. edge_density edge density computed maximal partial clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique24.html","id":null,"dir":"Reference","previous_headings":"","what":"I'm not sure if this will work... — compute_maximal_partial_clique24","title":"I'm not sure if this will work... — compute_maximal_partial_clique24","text":"function output one edge, satisfy definition clique likely largest one","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique24.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"I'm not sure if this will work... — compute_maximal_partial_clique24","text":"","code":"compute_maximal_partial_clique24(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique24.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"I'm not sure if this will work... — compute_maximal_partial_clique24","text":"adj_mat matrix alpha value","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique24.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"I'm not sure if this will work... — compute_maximal_partial_clique24","text":"list","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique25.html","id":null,"dir":"Reference","previous_headings":"","what":"This function identifies the largest partial clique based on the given adjacency matrix and a required edge density. — compute_maximal_partial_clique25","title":"This function identifies the largest partial clique based on the given adjacency matrix and a required edge density. — compute_maximal_partial_clique25","text":"function identifies largest partial clique based given adjacency matrix required edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique25.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function identifies the largest partial clique based on the given adjacency matrix and a required edge density. — compute_maximal_partial_clique25","text":"","code":"compute_maximal_partial_clique25(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function identifies the largest partial clique based on the given adjacency matrix and a required edge density. — compute_maximal_partial_clique25","text":"adj_mat symmetric matrix (0-1) representing adjacency relationships among nodes. alpha numeric value 0.5 1 (inclusive) representing required edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique25.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function identifies the largest partial clique based on the given adjacency matrix and a required edge density. — compute_maximal_partial_clique25","text":"list containing index vector nodes maximal partial clique (clique_idx) computed edge density (edge_density).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique3.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_maximal_partial_clique3 — compute_maximal_partial_clique3","title":"compute_maximal_partial_clique3 — compute_maximal_partial_clique3","text":"compute_maximal_partial_clique3","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_maximal_partial_clique3 — compute_maximal_partial_clique3","text":"","code":"compute_maximal_partial_clique3(adj_mat, alpha, max_iteration = 1000)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute_maximal_partial_clique3 — compute_maximal_partial_clique3","text":"adj_mat symmetrical matrix 0s 1s. diagonal must 1s 5 ~ 50 rows alpha prespecified density can accept partial connected clique max_iteration maximum number iterations","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute_maximal_partial_clique3 — compute_maximal_partial_clique3","text":"number nodes included maximam partial clique actual density clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique4.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute maximal partial clique — compute_maximal_partial_clique4","title":"Compute maximal partial clique — compute_maximal_partial_clique4","text":"Computes maximal partial clique given adjacency matrix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute maximal partial clique — compute_maximal_partial_clique4","text":"","code":"compute_maximal_partial_clique4(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute maximal partial clique — compute_maximal_partial_clique4","text":"adj_mat adjacency matrix - symmetric matrix 0s 1s 1s along diagonal 5 50 rows/columns alpha edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute maximal partial clique — compute_maximal_partial_clique4","text":"vector index numbers nodes maximal partial clique along edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique5.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute maximal partial clique — compute_maximal_partial_clique5","title":"Compute maximal partial clique — compute_maximal_partial_clique5","text":"function first computes maximal full clique records index numbers, tries adding additional node maximal full clique. one node makes new clique satisfy requirement, function tries adding 2 additional nodes previous maximal full clique repeats procedure test different nodes combinations. procedure goes case adding y nodes, combination y nodes satisfy requirement. returns index numbers maximal full clique well y-1 nodes selected previously clique_idx.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute maximal partial clique — compute_maximal_partial_clique5","text":"","code":"compute_maximal_partial_clique5(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute maximal partial clique — compute_maximal_partial_clique5","text":"adj_mat adjacency matrix alpha required edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute maximal partial clique — compute_maximal_partial_clique5","text":"numeric vector index numbers maximum partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique6.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximal Partial Clique Computation — compute_maximal_partial_clique6","title":"Maximal Partial Clique Computation — compute_maximal_partial_clique6","text":"function computes maximal partial clique given adjacency matrix edge density threshold. iterates nodes identify largest subset pair nodes densely connected enough.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximal Partial Clique Computation — compute_maximal_partial_clique6","text":"","code":"compute_maximal_partial_clique6(adj_mat, alpha, ...)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximal Partial Clique Computation — compute_maximal_partial_clique6","text":"adj_mat symmetric adjacency matrix values 0 1. must 1’s along diagonal, row- column-names, 5 50 rows/columns (inclusive). alpha numeric value 0.5 1 (inclusive) specifying density requirement maximal partial clique. ... Additional arguments (currently used).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximal Partial Clique Computation — compute_maximal_partial_clique6","text":"list named elements: clique_idx numeric vector index numbers corresponding nodes maximum partial clique. edge_density percentage edges adj_mat among nodes clique_idx.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique7.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the largest partial clique within a given adjacency matrix — compute_maximal_partial_clique7","title":"Find the largest partial clique within a given adjacency matrix — compute_maximal_partial_clique7","text":"Find largest partial clique within given adjacency matrix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the largest partial clique within a given adjacency matrix — compute_maximal_partial_clique7","text":"","code":"compute_maximal_partial_clique7(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique7.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the largest partial clique within a given adjacency matrix — compute_maximal_partial_clique7","text":"adj_mat adjacency matrix within largest partial clique searched alpha minimum required edge density partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique7.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the largest partial clique within a given adjacency matrix — compute_maximal_partial_clique7","text":"list containing indices nodes within clique actual edge density return partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique8.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Maximal Partial Clique — compute_maximal_partial_clique8","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique8","text":"Given adjacency matrix adj_mat required edge density alpha, program determine matrix diagonal, (meaning nodes connection.) , return 1 node clique density 1. matrix diagonal, least one edge. program list first edge finds largest partial clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique8.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique8","text":"","code":"compute_maximal_partial_clique8(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique8.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique8","text":"adj_mat adjacency matrix tested loaded function alpha density level partial clique requested","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique8.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique8","text":"list clique index largest partial clique adjacency matrix, edge density","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique9.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Maximal Partial Clique — compute_maximal_partial_clique9","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique9","text":"function attempts find maximal partial clique edge density least great specified alpha value given adjacency matrix. function searches possible combinations nodes, evaluating set specified edge density.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique9.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique9","text":"","code":"compute_maximal_partial_clique9(adj_mat, alpha = 0.5)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique9.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique9","text":"adj_mat symmetric adjacency matrix element either 0 1. matrix represents graph looking clique. matrix square, diagonal elements set 1. alpha numeric value 0 1 inclusive, specifying minimum edge density required partial clique. threshold decide subsets nodes form valid clique based internal connectivity.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique9.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Maximal Partial Clique — compute_maximal_partial_clique9","text":"list containing two elements: clique_idx, vector node indices forming maximal partial clique required density, edge_density, actual edge density found clique. clique meets criteria, clique_idx empty integer vector edge_density 0.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique_master.html","id":null,"dir":"Reference","previous_headings":"","what":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","title":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","text":"function runs implementation (dictated number) using inputs adj_mat alpha. example, compute_maximal_partial_clique_master(adj_mat, alpha, number = 5) executes compute_maximal_partial_clique5(adj_mat, alpha).","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique_master.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","text":"","code":"compute_maximal_partial_clique_master(adj_mat, alpha, number, time_limit = 30)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique_master.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","text":"adj_mat symmetric matrix values 0 1, 1's along diagonal, row- column-names, 5 50  rows/columns (inclusive) alpha single numeric (.e., length 1), value 0.5 1 (inclusive) number implementation number use time_limit number seconds implementation times ","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique_master.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","text":"list clique_idx, edge_density (implementation ) status valid (added function)","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/compute_maximal_partial_clique_master.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Master file for computing maximal partial clique — compute_maximal_partial_clique_master","text":"implementation errors (.e., crashes), output status error. implementation complete within time_limit number seconds (.e., took long), output status timed_out. valid output boolean whether provided clique_idx forms valid partial clique. method status timed_out error, method (default) valid=FALSE.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-calculate_maximum_candidate_18.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to compute the upper bound of the clique size — .calculate_maximum_candidate_18","title":"A function to compute the upper bound of the clique size — .calculate_maximum_candidate_18","text":"Given adjacency matrix, function uses sum adjacency matrix upper bound possible clique size","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-calculate_maximum_candidate_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to compute the upper bound of the clique size — .calculate_maximum_candidate_18","text":"","code":".calculate_maximum_candidate_18(adj_mat, alpha)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-calculate_maximum_candidate_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to compute the upper bound of the clique size — .calculate_maximum_candidate_18","text":"adj_mat symmetric diagonal adjacency matrix alpha threshold maximum number edges partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-calculate_maximum_candidate_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to compute the upper bound of the clique size — .calculate_maximum_candidate_18","text":"upper bound clique size","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-fixed_combn_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate combinations while fixing the first k elements — .fixed_combn_18","title":"Generate combinations while fixing the first k elements — .fixed_combn_18","text":"Generate combinations fixing first k elements","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-fixed_combn_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate combinations while fixing the first k elements — .fixed_combn_18","text":"","code":".fixed_combn_18(vec, c, k)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-fixed_combn_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate combinations while fixing the first k elements — .fixed_combn_18","text":"vec vector choose c number elements choose k number elements fix","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-fixed_combn_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate combinations while fixing the first k elements — .fixed_combn_18","text":"matrix combinations","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-minimum_searcher_18.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that further restricts the candidate nodes for a partial clique — .minimum_searcher_18","title":"A function that further restricts the candidate nodes for a partial clique — .minimum_searcher_18","text":"Given set candidate nodes, function restricts candidate nodes partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-minimum_searcher_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that further restricts the candidate nodes for a partial clique — .minimum_searcher_18","text":"","code":".minimum_searcher_18(adj_mat, candidates, c, at_least_total)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-minimum_searcher_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that further restricts the candidate nodes for a partial clique — .minimum_searcher_18","text":"adj_mat symmetric diagonal adjacency matrix candidates set candidate nodes c size partial clique at_least_total minimum number edges partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-minimum_searcher_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that further restricts the candidate nodes for a partial clique — .minimum_searcher_18","text":"minimum number edges per node","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-pruned_cols_18.html","id":null,"dir":"Reference","previous_headings":"","what":"Prunes columns that can be a part of a partial clique of size c — .pruned_cols_18","title":"Prunes columns that can be a part of a partial clique of size c — .pruned_cols_18","text":"Prunes columns can part partial clique size c","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-pruned_cols_18.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prunes columns that can be a part of a partial clique of size c — .pruned_cols_18","text":"","code":".pruned_cols_18(adj_mat, alpha, c)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-pruned_cols_18.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prunes columns that can be a part of a partial clique of size c — .pruned_cols_18","text":"adj_mat symmetric diagonal adjacency matrix alpha threshold maximum number edges partial clique c size partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/dot-pruned_cols_18.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prunes columns that can be a part of a partial clique of size c — .pruned_cols_18","text":"Candidate rows may part partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/generate_partial_clique.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","title":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","text":"function generates random adjacency matrix partial clique, specified fraction nodes forms partial clique, specified edge density applies within clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/generate_partial_clique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","text":"","code":"generate_partial_clique(n, clique_fraction, clique_edge_density)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/generate_partial_clique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","text":"n total number nodes graph. clique_fraction fraction nodes (n nodes) part partial clique. clique_edge_density edge density among nodes clique.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/generate_partial_clique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","text":"adjacency matrix representing generated graph.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/generate_partial_clique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a random adjacency matrix with a partial clique — generate_partial_clique","text":"","code":"n <- 8 clique_fraction <- 0.5 clique_edge_density <- 0.8 random_adj_matrix <- generate_partial_clique(n, clique_fraction, clique_edge_density) print(random_adj_matrix) #> $adj_mat #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] #> [1,]    1    0    0    1    0    0    1    1 #> [2,]    0    1    0    0    0    0    0    0 #> [3,]    0    0    1    0    0    0    0    0 #> [4,]    1    0    0    1    0    0    1    1 #> [5,]    0    0    0    0    1    0    0    0 #> [6,]    0    0    0    0    0    1    0    0 #> [7,]    1    0    0    1    0    0    1    0 #> [8,]    1    0    0    1    0    0    0    1 #>"},{"path":"https://amywatt.github.io/UWBiostat561/reference/hw4_simulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","title":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","text":"function takes inputs generate random adjacency matrices varying number nodes, partial clique fractions, edge densities. matrices used test implementations compute maximum partial clique return largest valid clique frequently.","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/hw4_simulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","text":"","code":"hw4_simulation(   n_vec,   clique_fraction_vec,   clique_edge_density_vec,   alpha_vec,   trials,   imp_numbers )"},{"path":"https://amywatt.github.io/UWBiostat561/reference/hw4_simulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","text":"n_vec vector inputs number nodes adjacency matrix generation clique_fraction_vec vector inputs clique fraction adjacency matrix generation clique_edge_density_vec vector inputs edge density adjacency matrix generation alpha_vec vector alpha values use computing maximum partial clique trials number trials per parameterization adjacency matrix imp_numbers vector implementations compute_maximum_partial_clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/hw4_simulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","text":"list dataframe implementation number number times implementation calculated largest valid partial clique number tests run","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/hw4_simulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulation for computing maximum partial clique in various implementations — hw4_simulation","text":"","code":"n_vec <- c(15) clique_fraction_vec <- c(0.6, 0.9) clique_edge_density_vec <- c(0.6, 0.9) alpha_vec <- c(0.75, 0.95) trials <- 1 imp_numbers <- c(23)  hw4_simulation(n_vec, clique_fraction_vec, clique_edge_density_vec, alpha_vec, trials, imp_numbers) #> $result #>                   num_largest_partial_clique #> implementation 23                          8 #>  #> $num_tests #> [1] 8 #>"},{"path":"https://amywatt.github.io/UWBiostat561/reference/is_partial_clique_7.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to check if a set of nodes forms a partial clique — is_partial_clique_7","title":"Helper function to check if a set of nodes forms a partial clique — is_partial_clique_7","text":"Helper function check set nodes forms partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/is_partial_clique_7.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to check if a set of nodes forms a partial clique — is_partial_clique_7","text":"","code":"is_partial_clique_7(submatrix, alpha = 1)"},{"path":"https://amywatt.github.io/UWBiostat561/reference/is_partial_clique_7.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to check if a set of nodes forms a partial clique — is_partial_clique_7","text":"submatrix submatrix formed set nodes alpha minimum required edge density partial clique","code":""},{"path":"https://amywatt.github.io/UWBiostat561/reference/is_partial_clique_7.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to check if a set of nodes forms a partial clique — is_partial_clique_7","text":"TRUE FALSE depending whether given sub-matrix forms partial clique TRUE FALSE depending whether given submatrix forms partial clique","code":""}]
